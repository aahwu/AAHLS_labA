

================================================================
== Vitis HLS Report for 'matrixmul'
================================================================
* Date:           Wed Oct 12 21:42:40 2022

* Version:        2022.1 (Build 3526262 on Mon Apr 18 15:48:16 MDT 2022)
* Project:        hls_matrixmul_prj2
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcvu11p-flga2577-1-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  3.251 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+------------------------------------------+
    |  Latency (cycles) |  Latency (absolute) |  Interval |                 Pipeline                 |
    |   min   |   max   |    min   |    max   | min | max |                   Type                   |
    +---------+---------+----------+----------+-----+-----+------------------------------------------+
    |       14|       15|  0.140 us|  0.150 us|    9|    9|  loop rewind stp(delay=0 clock cycles(s))|
    +---------+---------+----------+----------+-----+-----+------------------------------------------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------+---------+---------+----------+-----------+-----------+------+----------+
        |           |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-----------+---------+---------+----------+-----------+-----------+------+----------+
        |- Row_Col  |       14|       14|         7|          1|          1|     9|       yes|
        +-----------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 7


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 8
* Pipeline : 1
  Pipeline-0 : II = 1, D = 7, States = { 2 3 4 5 6 7 8 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 2 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.46>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%a_row = alloca i32 1"   --->   Operation 9 'alloca' 'a_row' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%a_row_1 = alloca i32 1"   --->   Operation 10 'alloca' 'a_row_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%a_row_2 = alloca i32 1"   --->   Operation 11 'alloca' 'a_row_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i24 %a, void @empty_0, i32 0, i32 0, void @empty, i32 0, i32 0, void @empty, void @empty, void @empty, i32 0, i32 0, i32 0, i32 0, void @empty, void @empty, i32 4294967295, i32 0"   --->   Operation 12 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i24 %b, void @empty_0, i32 0, i32 0, void @empty, i32 0, i32 0, void @empty, void @empty, void @empty, i32 0, i32 0, i32 0, i32 0, void @empty, void @empty, i32 4294967295, i32 0"   --->   Operation 13 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i16 %res, void @empty_0, i32 0, i32 0, void @empty, i32 0, i32 0, void @empty, void @empty, void @empty, i32 0, i32 0, i32 0, i32 0, void @empty, void @empty, i32 4294967295, i32 0"   --->   Operation 14 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%b_copy = alloca i64 1" [lab2/matrixmul.cpp:59]   --->   Operation 15 'alloca' 'b_copy' <Predicate = true> <Delay = 0.00> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 3> <RAM>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%b_copy_1 = alloca i64 1" [lab2/matrixmul.cpp:59]   --->   Operation 16 'alloca' 'b_copy_1' <Predicate = true> <Delay = 0.00> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 3> <RAM>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%b_copy_2 = alloca i64 1" [lab2/matrixmul.cpp:59]   --->   Operation 17 'alloca' 'b_copy_2' <Predicate = true> <Delay = 0.00> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 3> <RAM>
ST_1 : Operation 18 [1/1] (0.46ns)   --->   "%br_ln0 = br void %rewind_header"   --->   Operation 18 'br' 'br_ln0' <Predicate = true> <Delay = 0.46>

State 2 <SV = 1> <Delay = 2.47>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%do_init = phi i1 1, void %entry, i1 0, void %for.inc45, i1 1, void %for.end58"   --->   Operation 19 'phi' 'do_init' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%add_ln6310 = phi i2 1, void %entry, i2 %add_ln63, void %for.inc45, i2 1, void %for.end58" [lab2/matrixmul.cpp:63]   --->   Operation 20 'phi' 'add_ln6310' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%icmp_ln659 = phi i1 0, void %entry, i1 %icmp_ln65, void %for.inc45, i1 0, void %for.end58" [lab2/matrixmul.cpp:65]   --->   Operation 21 'phi' 'icmp_ln659' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%cmp148 = phi i1 1, void %entry, i1 %cmp14, void %for.inc45, i1 1, void %for.end58" [lab2/matrixmul.cpp:63]   --->   Operation 22 'phi' 'cmp148' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%j4 = phi i2 0, void %entry, i2 %j, void %for.inc45, i2 0, void %for.end58"   --->   Operation 23 'phi' 'j4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%i3 = phi i2 0, void %entry, i2 %i, void %for.inc45, i2 0, void %for.end58"   --->   Operation 24 'phi' 'i3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%indvar_flatten2 = phi i4 0, void %entry, i4 %add_ln63_1, void %for.inc45, i4 0, void %for.end58" [lab2/matrixmul.cpp:63]   --->   Operation 25 'phi' 'indvar_flatten2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%br_ln0 = br i1 %do_init, void %for.inc56, void %rewind_init"   --->   Operation 26 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%spectopmodule_ln0 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_1"   --->   Operation 27 'spectopmodule' 'spectopmodule_ln0' <Predicate = (do_init)> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i24 %a"   --->   Operation 28 'specbitsmap' 'specbitsmap_ln0' <Predicate = (do_init)> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i24 %b"   --->   Operation 29 'specbitsmap' 'specbitsmap_ln0' <Predicate = (do_init)> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i16 %res"   --->   Operation 30 'specbitsmap' 'specbitsmap_ln0' <Predicate = (do_init)> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc56"   --->   Operation 31 'br' 'br_ln0' <Predicate = (do_init)> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @Row_Col_str"   --->   Operation 32 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 9, i64 9, i64 9"   --->   Operation 33 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.34ns)   --->   "%select_ln58 = select i1 %icmp_ln659, i2 0, i2 %j4" [lab2/matrixmul.cpp:58]   --->   Operation 34 'select' 'select_ln58' <Predicate = true> <Delay = 0.34> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.34> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 35 [1/1] (0.39ns)   --->   "%cmp14_mid1 = icmp_eq  i2 %add_ln6310, i2 0" [lab2/matrixmul.cpp:63]   --->   Operation 35 'icmp' 'cmp14_mid1' <Predicate = true> <Delay = 0.39> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 36 [1/1] (0.34ns)   --->   "%i = select i1 %icmp_ln659, i2 %add_ln6310, i2 %i3" [lab2/matrixmul.cpp:63]   --->   Operation 36 'select' 'i' <Predicate = true> <Delay = 0.34> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.34> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%zext_ln65 = zext i2 %select_ln58" [lab2/matrixmul.cpp:65]   --->   Operation 37 'zext' 'zext_ln65' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%specpipeline_ln66 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty" [lab2/matrixmul.cpp:66]   --->   Operation 38 'specpipeline' 'specpipeline_ln66' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "%specloopname_ln58 = specloopname void @_ssdm_op_SpecLoopName, void @empty_2" [lab2/matrixmul.cpp:58]   --->   Operation 39 'specloopname' 'specloopname_ln58' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (0.39ns)   --->   "%icmp_ln70 = icmp_eq  i2 %select_ln58, i2 0" [lab2/matrixmul.cpp:70]   --->   Operation 40 'icmp' 'icmp_ln70' <Predicate = true> <Delay = 0.39> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (0.80ns)   --->   "%add_ln63_1 = add i4 %indvar_flatten2, i4 1" [lab2/matrixmul.cpp:63]   --->   Operation 41 'add' 'add_ln63_1' <Predicate = true> <Delay = 0.80> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%br_ln70 = br i1 %icmp_ln70, void %if.end, void %for.inc" [lab2/matrixmul.cpp:70]   --->   Operation 42 'br' 'br_ln70' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (1.72ns)   --->   "%a_read = read i24 @_ssdm_op_Read.ap_fifo.volatile.i24P0A, i24 %a" [lab2/matrixmul.cpp:72]   --->   Operation 43 'read' 'a_read' <Predicate = (icmp_ln70)> <Delay = 1.72> <CoreInst = "FIFO">   --->   Core 78 'FIFO' <Latency = 0> <II = 1> <Delay = 1.72> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = -1> <Depth = -1> <FIFO>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%a_row_3 = trunc i24 %a_read" [lab2/matrixmul.cpp:72]   --->   Operation 44 'trunc' 'a_row_3' <Predicate = (icmp_ln70)> <Delay = 0.00>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%a_row_4 = partselect i8 @_ssdm_op_PartSelect.i8.i24.i32.i32, i24 %a_read, i32 8, i32 15" [lab2/matrixmul.cpp:72]   --->   Operation 45 'partselect' 'a_row_4' <Predicate = (icmp_ln70)> <Delay = 0.00>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%a_row_5 = partselect i8 @_ssdm_op_PartSelect.i8.i24.i32.i32, i24 %a_read, i32 16, i32 23" [lab2/matrixmul.cpp:72]   --->   Operation 46 'partselect' 'a_row_5' <Predicate = (icmp_ln70)> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%store_ln72 = store i8 %a_row_3, i8 %a_row_2" [lab2/matrixmul.cpp:72]   --->   Operation 47 'store' 'store_ln72' <Predicate = (icmp_ln70)> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "%store_ln72 = store i8 %a_row_4, i8 %a_row_1" [lab2/matrixmul.cpp:72]   --->   Operation 48 'store' 'store_ln72' <Predicate = (icmp_ln70)> <Delay = 0.00>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%store_ln72 = store i8 %a_row_5, i8 %a_row" [lab2/matrixmul.cpp:72]   --->   Operation 49 'store' 'store_ln72' <Predicate = (icmp_ln70)> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (0.00ns)   --->   "%br_ln72 = br void %if.end" [lab2/matrixmul.cpp:72]   --->   Operation 50 'br' 'br_ln72' <Predicate = (icmp_ln70)> <Delay = 0.00>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "%b_copy_addr = getelementptr i8 %b_copy, i64 0, i64 %zext_ln65" [lab2/matrixmul.cpp:80]   --->   Operation 51 'getelementptr' 'b_copy_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 52 [1/1] (0.00ns)   --->   "%b_copy_1_addr = getelementptr i8 %b_copy_1, i64 0, i64 %zext_ln65" [lab2/matrixmul.cpp:80]   --->   Operation 52 'getelementptr' 'b_copy_1_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 53 [1/1] (0.00ns)   --->   "%b_copy_2_addr = getelementptr i8 %b_copy_2, i64 0, i64 %zext_ln65" [lab2/matrixmul.cpp:80]   --->   Operation 53 'getelementptr' 'b_copy_2_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 54 [1/1] (0.34ns)   --->   "%select_ln58_1 = select i1 %icmp_ln659, i1 %cmp14_mid1, i1 %cmp148" [lab2/matrixmul.cpp:58]   --->   Operation 54 'select' 'select_ln58_1' <Predicate = true> <Delay = 0.34> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.34> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 55 [1/1] (0.00ns)   --->   "%br_ln75 = br i1 %select_ln58_1, void %for.inc45, void %for.inc29" [lab2/matrixmul.cpp:75]   --->   Operation 55 'br' 'br_ln75' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 56 [1/1] (1.72ns)   --->   "%b_read = read i24 @_ssdm_op_Read.ap_fifo.volatile.i24P0A, i24 %b" [lab2/matrixmul.cpp:77]   --->   Operation 56 'read' 'b_read' <Predicate = (select_ln58_1)> <Delay = 1.72> <CoreInst = "FIFO">   --->   Core 78 'FIFO' <Latency = 0> <II = 1> <Delay = 1.72> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = -1> <Depth = -1> <FIFO>
ST_2 : Operation 57 [1/1] (0.00ns)   --->   "%trunc_ln77 = trunc i24 %b_read" [lab2/matrixmul.cpp:77]   --->   Operation 57 'trunc' 'trunc_ln77' <Predicate = (select_ln58_1)> <Delay = 0.00>
ST_2 : Operation 58 [1/1] (0.73ns)   --->   "%store_ln77 = store i8 %trunc_ln77, i2 %b_copy_addr" [lab2/matrixmul.cpp:77]   --->   Operation 58 'store' 'store_ln77' <Predicate = (select_ln58_1)> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 3> <RAM>
ST_2 : Operation 59 [1/1] (0.00ns)   --->   "%tmp = partselect i8 @_ssdm_op_PartSelect.i8.i24.i32.i32, i24 %b_read, i32 8, i32 15" [lab2/matrixmul.cpp:77]   --->   Operation 59 'partselect' 'tmp' <Predicate = (select_ln58_1)> <Delay = 0.00>
ST_2 : Operation 60 [1/1] (0.73ns)   --->   "%store_ln77 = store i8 %tmp, i2 %b_copy_1_addr" [lab2/matrixmul.cpp:77]   --->   Operation 60 'store' 'store_ln77' <Predicate = (select_ln58_1)> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 3> <RAM>
ST_2 : Operation 61 [1/1] (0.00ns)   --->   "%tmp_s = partselect i8 @_ssdm_op_PartSelect.i8.i24.i32.i32, i24 %b_read, i32 16, i32 23" [lab2/matrixmul.cpp:77]   --->   Operation 61 'partselect' 'tmp_s' <Predicate = (select_ln58_1)> <Delay = 0.00>
ST_2 : Operation 62 [1/1] (0.73ns)   --->   "%store_ln77 = store i8 %tmp_s, i2 %b_copy_2_addr" [lab2/matrixmul.cpp:77]   --->   Operation 62 'store' 'store_ln77' <Predicate = (select_ln58_1)> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 3> <RAM>
ST_2 : Operation 63 [1/1] (0.00ns)   --->   "%br_ln77 = br void %for.inc45" [lab2/matrixmul.cpp:77]   --->   Operation 63 'br' 'br_ln77' <Predicate = (select_ln58_1)> <Delay = 0.00>
ST_2 : Operation 64 [1/1] (0.62ns)   --->   "%j = add i2 %select_ln58, i2 1" [lab2/matrixmul.cpp:65]   --->   Operation 64 'add' 'j' <Predicate = true> <Delay = 0.62> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 65 [1/1] (0.39ns)   --->   "%cmp14 = icmp_eq  i2 %i, i2 0" [lab2/matrixmul.cpp:63]   --->   Operation 65 'icmp' 'cmp14' <Predicate = true> <Delay = 0.39> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 66 [1/1] (0.39ns)   --->   "%icmp_ln65 = icmp_eq  i2 %j, i2 3" [lab2/matrixmul.cpp:65]   --->   Operation 66 'icmp' 'icmp_ln65' <Predicate = true> <Delay = 0.39> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 67 [1/1] (0.62ns)   --->   "%add_ln63 = add i2 %i, i2 1" [lab2/matrixmul.cpp:63]   --->   Operation 67 'add' 'add_ln63' <Predicate = true> <Delay = 0.62> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.62> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 68 [1/1] (0.72ns)   --->   "%icmp_ln63 = icmp_eq  i4 %indvar_flatten2, i4 8" [lab2/matrixmul.cpp:63]   --->   Operation 68 'icmp' 'icmp_ln63' <Predicate = true> <Delay = 0.72> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 69 [1/1] (0.00ns)   --->   "%br_ln63 = br i1 %icmp_ln63, void %rewind_header, void %for.end58" [lab2/matrixmul.cpp:63]   --->   Operation 69 'br' 'br_ln63' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 70 [1/1] (0.00ns)   --->   "%br_ln85 = br void %rewind_header" [lab2/matrixmul.cpp:85]   --->   Operation 70 'br' 'br_ln85' <Predicate = (icmp_ln63)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 0.73>
ST_3 : Operation 71 [1/1] (0.00ns)   --->   "%a_row_load = load i8 %a_row" [lab2/matrixmul.cpp:82]   --->   Operation 71 'load' 'a_row_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 72 [1/1] (0.00ns)   --->   "%a_row_1_load = load i8 %a_row_1" [lab2/matrixmul.cpp:82]   --->   Operation 72 'load' 'a_row_1_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 73 [1/1] (0.00ns)   --->   "%a_row_2_load = load i8 %a_row_2" [lab2/matrixmul.cpp:82]   --->   Operation 73 'load' 'a_row_2_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 74 [2/2] (0.73ns)   --->   "%b_copy_2_load = load i2 %b_copy_2_addr" [lab2/matrixmul.cpp:80]   --->   Operation 74 'load' 'b_copy_2_load' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 3> <RAM>

State 4 <SV = 3> <Delay = 1.81>
ST_4 : Operation 75 [2/2] (0.73ns)   --->   "%b_copy_1_load = load i2 %b_copy_1_addr" [lab2/matrixmul.cpp:80]   --->   Operation 75 'load' 'b_copy_1_load' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 3> <RAM>
ST_4 : Operation 76 [1/1] (0.00ns)   --->   "%sext_ln82_4 = sext i8 %a_row_load" [lab2/matrixmul.cpp:82]   --->   Operation 76 'sext' 'sext_ln82_4' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 77 [1/2] (0.73ns)   --->   "%b_copy_2_load = load i2 %b_copy_2_addr" [lab2/matrixmul.cpp:80]   --->   Operation 77 'load' 'b_copy_2_load' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 3> <RAM>
ST_4 : Operation 78 [1/1] (0.00ns)   --->   "%sext_ln82_5 = sext i8 %b_copy_2_load" [lab2/matrixmul.cpp:82]   --->   Operation 78 'sext' 'sext_ln82_5' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 79 [3/3] (1.08ns) (grouped into DSP with root node add_ln82)   --->   "%mul_ln82_2 = mul i16 %sext_ln82_5, i16 %sext_ln82_4" [lab2/matrixmul.cpp:82]   --->   Operation 79 'mul' 'mul_ln82_2' <Predicate = true> <Delay = 1.08> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 5 <SV = 4> <Delay = 1.81>
ST_5 : Operation 80 [2/2] (0.73ns)   --->   "%b_copy_load = load i2 %b_copy_addr" [lab2/matrixmul.cpp:80]   --->   Operation 80 'load' 'b_copy_load' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 3> <RAM>
ST_5 : Operation 81 [1/1] (0.00ns)   --->   "%sext_ln82_2 = sext i8 %a_row_1_load" [lab2/matrixmul.cpp:82]   --->   Operation 81 'sext' 'sext_ln82_2' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 82 [1/2] (0.73ns)   --->   "%b_copy_1_load = load i2 %b_copy_1_addr" [lab2/matrixmul.cpp:80]   --->   Operation 82 'load' 'b_copy_1_load' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 3> <RAM>
ST_5 : Operation 83 [1/1] (0.00ns)   --->   "%sext_ln82_3 = sext i8 %b_copy_1_load" [lab2/matrixmul.cpp:82]   --->   Operation 83 'sext' 'sext_ln82_3' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 84 [3/3] (1.08ns) (grouped into DSP with root node add_ln82_1)   --->   "%mul_ln82_1 = mul i16 %sext_ln82_3, i16 %sext_ln82_2" [lab2/matrixmul.cpp:82]   --->   Operation 84 'mul' 'mul_ln82_1' <Predicate = true> <Delay = 1.08> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 85 [2/3] (1.08ns) (grouped into DSP with root node add_ln82)   --->   "%mul_ln82_2 = mul i16 %sext_ln82_5, i16 %sext_ln82_4" [lab2/matrixmul.cpp:82]   --->   Operation 85 'mul' 'mul_ln82_2' <Predicate = true> <Delay = 1.08> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 6 <SV = 5> <Delay = 3.25>
ST_6 : Operation 86 [1/1] (0.00ns)   --->   "%sext_ln82 = sext i8 %a_row_2_load" [lab2/matrixmul.cpp:82]   --->   Operation 86 'sext' 'sext_ln82' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 87 [1/2] (0.73ns)   --->   "%b_copy_load = load i2 %b_copy_addr" [lab2/matrixmul.cpp:80]   --->   Operation 87 'load' 'b_copy_load' <Predicate = true> <Delay = 0.73> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.73> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 3> <RAM>
ST_6 : Operation 88 [1/1] (0.00ns)   --->   "%sext_ln82_1 = sext i8 %b_copy_load" [lab2/matrixmul.cpp:82]   --->   Operation 88 'sext' 'sext_ln82_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 89 [1/1] (1.69ns)   --->   "%mul_ln82 = mul i16 %sext_ln82_1, i16 %sext_ln82" [lab2/matrixmul.cpp:82]   --->   Operation 89 'mul' 'mul_ln82' <Predicate = true> <Delay = 1.69> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 1.69> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 90 [2/3] (1.08ns) (grouped into DSP with root node add_ln82_1)   --->   "%mul_ln82_1 = mul i16 %sext_ln82_3, i16 %sext_ln82_2" [lab2/matrixmul.cpp:82]   --->   Operation 90 'mul' 'mul_ln82_1' <Predicate = true> <Delay = 1.08> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 91 [1/3] (0.00ns) (grouped into DSP with root node add_ln82)   --->   "%mul_ln82_2 = mul i16 %sext_ln82_5, i16 %sext_ln82_4" [lab2/matrixmul.cpp:82]   --->   Operation 91 'mul' 'mul_ln82_2' <Predicate = true> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 92 [2/2] (0.83ns) (root node of the DSP)   --->   "%add_ln82 = add i16 %mul_ln82, i16 %mul_ln82_2" [lab2/matrixmul.cpp:82]   --->   Operation 92 'add' 'add_ln82' <Predicate = true> <Delay = 0.83> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 7 <SV = 6> <Delay = 1.66>
ST_7 : Operation 93 [1/3] (0.00ns) (grouped into DSP with root node add_ln82_1)   --->   "%mul_ln82_1 = mul i16 %sext_ln82_3, i16 %sext_ln82_2" [lab2/matrixmul.cpp:82]   --->   Operation 93 'mul' 'mul_ln82_1' <Predicate = true> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_7 : Operation 94 [1/2] (0.83ns) (root node of the DSP)   --->   "%add_ln82 = add i16 %mul_ln82, i16 %mul_ln82_2" [lab2/matrixmul.cpp:82]   --->   Operation 94 'add' 'add_ln82' <Predicate = true> <Delay = 0.83> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_7 : Operation 95 [2/2] (0.83ns) (root node of the DSP)   --->   "%add_ln82_1 = add i16 %add_ln82, i16 %mul_ln82_1" [lab2/matrixmul.cpp:82]   --->   Operation 95 'add' 'add_ln82_1' <Predicate = true> <Delay = 0.83> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 8 <SV = 7> <Delay = 2.55>
ST_8 : Operation 96 [1/2] (0.83ns) (root node of the DSP)   --->   "%add_ln82_1 = add i16 %add_ln82, i16 %mul_ln82_1" [lab2/matrixmul.cpp:82]   --->   Operation 96 'add' 'add_ln82_1' <Predicate = true> <Delay = 0.83> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.69> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_8 : Operation 97 [1/1] (1.72ns)   --->   "%write_ln82 = write void @_ssdm_op_Write.ap_fifo.volatile.i16P0A, i16 %res, i16 %add_ln82_1" [lab2/matrixmul.cpp:82]   --->   Operation 97 'write' 'write_ln82' <Predicate = true> <Delay = 1.72> <CoreInst = "FIFO">   --->   Core 78 'FIFO' <Latency = 0> <II = 1> <Delay = 1.72> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = -1> <Depth = -1> <FIFO>
ST_8 : Operation 98 [1/1] (0.00ns)   --->   "%return_ln85 = return void @_ssdm_op_Return" [lab2/matrixmul.cpp:85]   --->   Operation 98 'return' 'return_ln85' <Predicate = (icmp_ln63)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 0.46ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('do_init') [15]  (0.46 ns)

 <State 2>: 2.47ns
The critical path consists of the following:
	fifo read operation ('b_read', lab2/matrixmul.cpp:77) on port 'b' (lab2/matrixmul.cpp:77) [57]  (1.73 ns)
	'store' operation ('store_ln77', lab2/matrixmul.cpp:77) of variable 'trunc_ln77', lab2/matrixmul.cpp:77 on array 'b_copy', lab2/matrixmul.cpp:59 [59]  (0.73 ns)
	blocking operation 0.014 ns on control path)

 <State 3>: 0.73ns
The critical path consists of the following:
	'load' operation ('b_copy_2_load', lab2/matrixmul.cpp:80) on array 'b_copy', lab2/matrixmul.cpp:59 [78]  (0.73 ns)

 <State 4>: 1.82ns
The critical path consists of the following:
	'load' operation ('b_copy_2_load', lab2/matrixmul.cpp:80) on array 'b_copy', lab2/matrixmul.cpp:59 [78]  (0.73 ns)
	'mul' operation of DSP[81] ('mul_ln82_2', lab2/matrixmul.cpp:82) [80]  (1.09 ns)

 <State 5>: 1.82ns
The critical path consists of the following:
	'load' operation ('b_copy_1_load', lab2/matrixmul.cpp:80) on array 'b_copy', lab2/matrixmul.cpp:59 [74]  (0.73 ns)
	'mul' operation of DSP[82] ('mul_ln82_1', lab2/matrixmul.cpp:82) [76]  (1.09 ns)

 <State 6>: 3.25ns
The critical path consists of the following:
	'load' operation ('b_copy_load', lab2/matrixmul.cpp:80) on array 'b_copy', lab2/matrixmul.cpp:59 [70]  (0.73 ns)
	'mul' operation ('mul_ln82', lab2/matrixmul.cpp:82) [72]  (1.69 ns)
	'add' operation of DSP[81] ('add_ln82', lab2/matrixmul.cpp:82) [81]  (0.831 ns)

 <State 7>: 1.66ns
The critical path consists of the following:
	'add' operation of DSP[81] ('add_ln82', lab2/matrixmul.cpp:82) [81]  (0.831 ns)
	'add' operation of DSP[82] ('add_ln82_1', lab2/matrixmul.cpp:82) [82]  (0.831 ns)

 <State 8>: 2.56ns
The critical path consists of the following:
	'add' operation of DSP[82] ('add_ln82_1', lab2/matrixmul.cpp:82) [82]  (0.831 ns)
	fifo write operation ('write_ln82', lab2/matrixmul.cpp:82) on port 'res' (lab2/matrixmul.cpp:82) [83]  (1.73 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
